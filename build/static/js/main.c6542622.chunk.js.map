{"version":3,"sources":["Components/Button.js","Components/Header.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","onDoubleClick","id","Tasks","tasks","map","AddTask","useState","setText","day","setDay","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEMA,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAC1B,OACI,8BACI,yBAAQA,QAASA,EAASC,MAAO,CAACC,gBAAiBJ,GAASK,UAAU,MAAtE,cAA8EJ,EAA9E,UAKZF,EAAOO,aAAe,CAClB,MAAS,aAQEP,QChBTQ,EAAS,SAAC,GAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,QAC7B,OACI,yBAAQL,UAAU,SAAlB,UACI,mCAAMG,EAAN,OACA,cAAC,EAAD,CAAQR,MAAOU,EAAS,MAAO,QAAST,KAAMS,EAAS,QAAS,MAAOR,QAASO,QAK7EF,IAEfA,EAAOD,aAAe,CAClBE,MAAO,gB,WCHIG,EAVF,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAC3B,OACI,qBAAKT,UAAU,yCAAyCU,cAAe,kBAAMD,EAASF,EAAKI,KAA3F,SACI,+BACKJ,EAAKX,KADV,IACgB,cAAC,IAAD,CAASE,MAAO,CAACH,MAAO,MAAO,OAAU,WAAYE,QAAS,kBAAMW,EAASD,EAAKI,aCO/FC,EAVD,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACnB,OACI,mCACKK,EAAMC,KAAI,SAACP,GAAD,OACP,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,SAAUA,GAA/BD,EAAKI,UC8BjBI,EAnCE,SAAC,GAAa,IAAZX,EAAW,EAAXA,MACf,EAAwBY,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAOE,EAAP,KAAYC,EAAZ,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAaA,OACI,uBAAMrB,UAAU,WAAWsB,SAZd,SAACC,GACdA,EAAEC,iBAEE5B,EAKJQ,EAAO,CAAER,OAAMsB,MAAKE,aAJhBK,MAAM,sBAQV,UACI,sBAAKzB,UAAU,eAAf,UACI,2CACA,uBAAO0B,KAAK,OAAOC,YAAc,WAAWC,MAAOhC,EAAMiC,SAAU,SAACN,GAAD,OAAKN,EAAQM,EAAEO,OAAOF,aAE7F,sBAAK5B,UAAU,eAAf,UACI,iDACA,uBAAO0B,KAAK,OAAOC,YAAc,iBAAiBC,MAAOV,EAAKW,SAAU,SAACN,GAAD,OAAKJ,EAAOI,EAAEO,OAAOF,aAEjG,sBAAK5B,UAAU,kCAAf,UACI,mDACA,uBAAO0B,KAAK,WAAWE,MAAOR,EAAUS,SAAU,SAACN,GAAD,OAAKF,EAAYE,EAAEQ,cAAcC,eAEvF,uBAAON,KAAK,SAASE,MAAM,YAAY5B,UAAU,sBCQ9CiC,MAnCf,WACI,MAAsCjB,oBAAS,GAA/C,mBAAOkB,EAAP,KAAoBC,EAApB,KACA,EAA0BnB,mBAAS,IAAnC,mBAAOH,EAAP,KAAcuB,EAAd,KAsBA,OACI,sBAAKpC,UAAU,YAAf,UACI,cAAC,EAAD,CAAQG,MAAM,eAAeC,MAtBvB,WACV+B,GAAgBD,IAqB+B7B,QAAS6B,IACnDA,GAAe,cAAC,EAAD,CAAS9B,MAnBjB,SAACG,GACb,IAAMI,EAAK0B,KAAKC,MAAsB,IAAhBD,KAAKE,UAAoB,EACzCC,EAAO,aAAK7B,MAAOJ,GACzB6B,EAAS,GAAD,mBAAKvB,GAAL,CAAY2B,QAkBf3B,EAAM4B,OAAS,EAAI,cAAC,EAAD,CAAOjC,SAdhB,SAACG,GAChByB,EAASvB,EAAM6B,QAAO,SAACnC,GAAD,OAAUA,EAAKI,KAAOA,OAaSF,SATlC,SAACE,GACpByB,EAASvB,EAAMC,KAAI,SAACP,GAAD,OAAUA,EAAKI,KAAOA,EAAZ,2BAAqBJ,GAArB,IAA2Ba,UAAUb,EAAKa,WAAYb,SAQA,uBCtB5EoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6542622.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n        <div>\r\n            <button onClick={onClick} style={{backgroundColor: color }} className='btn'> {text} </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    'color': 'steelBlue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ( { title, onAdd, showAdd } ) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1> {title} </h1>\r\n            <Button color={showAdd? 'red': 'green'} text={showAdd? 'Close': 'Add'} onClick={onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({task, onDelete, onToggle}) => {\r\n    return (\r\n        <div className=\"task ${task.reminder? 'reminder': ''} \" onDoubleClick={() => onToggle(task.id)}> \r\n            <h3>\r\n                {task.text} <FaTimes style={{color: 'red', 'cursor': 'pointer'}} onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\nimport { useState } from 'react'\r\n\r\nconst Tasks = ({tasks, onDelete} ) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task key={task.id} task={task} onDelete={onDelete}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n const AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd( { text, day, reminder } )\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}> \r\n            <div className='form-control'>\r\n                <label> Task </label>\r\n                <input type='text' placeholder = 'Add Task' value={text} onChange={(e)=>setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label> Day & Time </label>\r\n                <input type='text' placeholder = 'Add Day & Time' value={day} onChange={(e)=>setDay(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label> Set Reminder </label>\r\n                <input type='Checkbox' value={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block' /> \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\r\nimport Header from './Components/Header.js'\r\nimport Tasks from './Components/Tasks.js'\r\nimport AddTask from './Components/AddTask.js'\r\n\r\nfunction App() {\r\n    const [showAddTask, setShowAddTask] = useState(true)\r\n    const [tasks, setTasks] = useState([])\r\n\r\n    const onAdd = () => {\r\n        setShowAddTask(!showAddTask)\r\n    }\r\n\r\n    const addTask = (task) => {\r\n        const id = Math.floor(Math.random() * 10000) + 1\r\n        const newTask = { id, ...task }\r\n        setTasks([...tasks, newTask])\r\n    }\r\n\r\n    // Delete a task\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle reminder on and off\r\n    const toggleReminder = (id) => {\r\n        setTasks(tasks.map((task) => task.id === id ? {...task, reminder:!task.reminder} : task))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header title=\"Task Tracker\" onAdd={onAdd} showAdd={showAddTask}/>\r\n            {showAddTask && <AddTask onAdd={addTask}/>}\r\n            {/*Show task list only if there are existing tasks*/}\r\n            {tasks.length > 0 ? <Tasks onDelete={deleteTask} onToggle={toggleReminder}/> : 'No Tasks To Show'}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}